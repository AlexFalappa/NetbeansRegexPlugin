/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.dev.eth0.netbeans.plugins.regex.prefs;

import java.awt.Color;
import java.util.Properties;
import java.util.regex.Pattern;

/**
 *
 * @author sasha
 */
public class PrefsDialog extends javax.swing.JDialog {

    private static final String PROPKEY_COLOR_0 = "regex.color.0";
    private static final String PROPKEY_COLOR_1 = "regex.color.1";
    private static final String PROPKEY_COLOR_2 = "regex.color.2";
    private static final String PROPKEY_COLOR_3 = "regex.color.3";
    private static final String PROPKEY_COLOR_4 = "regex.color.4";
    private static final String PROPKEY_COLOR_5 = "regex.color.5";
    private static final String PROPKEY_COLOR_6 = "regex.color.6";
    private final Color COL_HGLGHT_LIGHT_0 = new Color(230, 230, 230);
    private final Color COL_HGLGHT_LIGHT_1 = new Color(204, 255, 255);
    private final Color COL_HGLGHT_LIGHT_2 = new Color(255, 204, 255);
    private final Color COL_HGLGHT_LIGHT_3 = new Color(255, 255, 204);
    private final Color COL_HGLGHT_LIGHT_4 = new Color(255, 204, 204);
    private final Color COL_HGLGHT_LIGHT_5 = new Color(204, 255, 204);
    private final Color COL_HGLGHT_LIGHT_6 = new Color(204, 204, 255);
    private final Color COL_HGLGHT_DARK_0 = new Color(102, 102, 102);
    private final Color COL_HGLGHT_DARK_1 = new Color(43, 85, 85);
    private final Color COL_HGLGHT_DARK_2 = new Color(85, 43, 85);
    private final Color COL_HGLGHT_DARK_3 = new Color(85, 85, 43);
    private final Color COL_HGLGHT_DARK_4 = new Color(85, 43, 43);
    private final Color COL_HGLGHT_DARK_5 = new Color(43, 85, 43);
    private final Color COL_HGLGHT_DARK_6 = new Color(43, 43, 85);

    /**
     * Creates new form PrefsDialog
     */
    public PrefsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ccbCol0.setSelectedColor(COL_HGLGHT_LIGHT_0);
        ccbCol1.setSelectedColor(COL_HGLGHT_LIGHT_1);
        ccbCol2.setSelectedColor(COL_HGLGHT_LIGHT_2);
        ccbCol3.setSelectedColor(COL_HGLGHT_LIGHT_3);
        ccbCol4.setSelectedColor(COL_HGLGHT_LIGHT_4);
        ccbCol5.setSelectedColor(COL_HGLGHT_LIGHT_5);
        ccbCol6.setSelectedColor(COL_HGLGHT_LIGHT_6);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ccbCol3 = new org.openide.awt.ColorComboBox();
        lCol4 = new javax.swing.JLabel();
        ccbCol4 = new org.openide.awt.ColorComboBox();
        lCol5 = new javax.swing.JLabel();
        ccbCol5 = new org.openide.awt.ColorComboBox();
        lCol6 = new javax.swing.JLabel();
        ccbCol6 = new org.openide.awt.ColorComboBox();
        lHeading = new javax.swing.JLabel();
        ccbCol0 = new org.openide.awt.ColorComboBox();
        lCol1 = new javax.swing.JLabel();
        ccbCol1 = new org.openide.awt.ColorComboBox();
        lCol2 = new javax.swing.JLabel();
        ccbCol2 = new org.openide.awt.ColorComboBox();
        lCol3 = new javax.swing.JLabel();
        lHead1 = new javax.swing.JLabel();
        lHead2 = new javax.swing.JLabel();
        chDotall = new javax.swing.JCheckBox();
        chCaseinsens = new javax.swing.JCheckBox();
        chMultiline = new javax.swing.JCheckBox();
        chComments = new javax.swing.JCheckBox();
        chUnicodeCase = new javax.swing.JCheckBox();
        chLiteral = new javax.swing.JCheckBox();
        chCanonical = new javax.swing.JCheckBox();
        chUnixLines = new javax.swing.JCheckBox();
        chUnicodeClass = new javax.swing.JCheckBox();
        sep1 = new javax.swing.JSeparator();
        sep2 = new javax.swing.JSeparator();
        bLight = new javax.swing.JButton();
        bDark = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.title")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lCol4, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.lCol4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lCol5, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.lCol5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lCol6, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.lCol6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lHeading, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.lHeading.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lCol1, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.lCol1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lCol2, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.lCol2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lCol3, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.lCol3.text")); // NOI18N

        lHead1.setFont(lHead1.getFont().deriveFont(lHead1.getFont().getSize()+2f));
        org.openide.awt.Mnemonics.setLocalizedText(lHead1, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.lHead1.text")); // NOI18N

        lHead2.setFont(lHead2.getFont().deriveFont(lHead2.getFont().getSize()+2f));
        org.openide.awt.Mnemonics.setLocalizedText(lHead2, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.lHead2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chDotall, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.chDotall.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chCaseinsens, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.chCaseinsens.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chMultiline, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.chMultiline.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chComments, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.chComments.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chUnicodeCase, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.chUnicodeCase.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chLiteral, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.chLiteral.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chCanonical, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.chCanonical.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chUnixLines, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.chUnixLines.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chUnicodeClass, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.chUnicodeClass.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(bLight, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.bLight.text")); // NOI18N
        bLight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLightActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(bDark, org.openide.util.NbBundle.getMessage(PrefsDialog.class, "PrefsDialog.bDark.text")); // NOI18N
        bDark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDarkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lHead1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sep2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lHead2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sep1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lCol4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccbCol4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lCol5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccbCol5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lCol6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccbCol6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lCol1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccbCol1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lCol2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccbCol2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lCol3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccbCol3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lHeading)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccbCol0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(chCanonical)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chDotall)
                                    .addComponent(chCaseinsens))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chMultiline)
                                    .addComponent(chLiteral))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chComments)
                                    .addComponent(chUnixLines))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chUnicodeCase)
                                    .addComponent(chUnicodeClass))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bLight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDark)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lHead1)
                    .addComponent(sep2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lHeading)
                    .addComponent(ccbCol0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lCol1)
                    .addComponent(ccbCol1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lCol2)
                    .addComponent(ccbCol2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lCol3)
                    .addComponent(ccbCol3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lCol4)
                    .addComponent(ccbCol4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lCol5)
                    .addComponent(ccbCol5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lCol6)
                    .addComponent(ccbCol6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bLight)
                    .addComponent(bDark))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lHead2)
                    .addComponent(sep1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chDotall)
                    .addComponent(chComments)
                    .addComponent(chUnicodeCase)
                    .addComponent(chMultiline))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chCaseinsens)
                    .addComponent(chUnixLines)
                    .addComponent(chUnicodeClass)
                    .addComponent(chLiteral))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCanonical)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bLightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLightActionPerformed
        ccbCol0.setSelectedColor(COL_HGLGHT_LIGHT_0);
        ccbCol1.setSelectedColor(COL_HGLGHT_LIGHT_1);
        ccbCol2.setSelectedColor(COL_HGLGHT_LIGHT_2);
        ccbCol3.setSelectedColor(COL_HGLGHT_LIGHT_3);
        ccbCol4.setSelectedColor(COL_HGLGHT_LIGHT_4);
        ccbCol5.setSelectedColor(COL_HGLGHT_LIGHT_5);
        ccbCol6.setSelectedColor(COL_HGLGHT_LIGHT_6);
    }//GEN-LAST:event_bLightActionPerformed

    private void bDarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDarkActionPerformed
        ccbCol0.setSelectedColor(COL_HGLGHT_DARK_0);
        ccbCol1.setSelectedColor(COL_HGLGHT_DARK_1);
        ccbCol2.setSelectedColor(COL_HGLGHT_DARK_2);
        ccbCol3.setSelectedColor(COL_HGLGHT_DARK_3);
        ccbCol4.setSelectedColor(COL_HGLGHT_DARK_4);
        ccbCol5.setSelectedColor(COL_HGLGHT_DARK_5);
        ccbCol6.setSelectedColor(COL_HGLGHT_DARK_6);
    }//GEN-LAST:event_bDarkActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDark;
    private javax.swing.JButton bLight;
    private org.openide.awt.ColorComboBox ccbCol0;
    private org.openide.awt.ColorComboBox ccbCol1;
    private org.openide.awt.ColorComboBox ccbCol2;
    private org.openide.awt.ColorComboBox ccbCol3;
    private org.openide.awt.ColorComboBox ccbCol4;
    private org.openide.awt.ColorComboBox ccbCol5;
    private org.openide.awt.ColorComboBox ccbCol6;
    private javax.swing.JCheckBox chCanonical;
    private javax.swing.JCheckBox chCaseinsens;
    private javax.swing.JCheckBox chComments;
    private javax.swing.JCheckBox chDotall;
    private javax.swing.JCheckBox chLiteral;
    private javax.swing.JCheckBox chMultiline;
    private javax.swing.JCheckBox chUnicodeCase;
    private javax.swing.JCheckBox chUnicodeClass;
    private javax.swing.JCheckBox chUnixLines;
    private javax.swing.JLabel lCol1;
    private javax.swing.JLabel lCol2;
    private javax.swing.JLabel lCol3;
    private javax.swing.JLabel lCol4;
    private javax.swing.JLabel lCol5;
    private javax.swing.JLabel lCol6;
    private javax.swing.JLabel lHead1;
    private javax.swing.JLabel lHead2;
    private javax.swing.JLabel lHeading;
    private javax.swing.JSeparator sep1;
    private javax.swing.JSeparator sep2;
    // End of variables declaration//GEN-END:variables

    public boolean isCaseInsensitive() {
        return chCaseinsens.isSelected();
    }

    public boolean isMultiline() {
        return chMultiline.isSelected();
    }

    public boolean isDotall() {
        return chDotall.isSelected();
    }

    public boolean isLiteral() {
        return chLiteral.isSelected();
    }

    public void setCaseInsensitive(boolean selected) {
        chCaseinsens.setSelected(selected);
    }

    public void setDotall(boolean selected) {
        chDotall.setSelected(selected);
    }

    public void setLiteral(boolean selected) {
        chLiteral.setSelected(selected);
    }

    public void setMultiline(boolean selected) {
        chMultiline.setSelected(selected);
    }

    public int getFlags() {
        int flags = 0;
        if (chCaseinsens.isSelected()) {
            flags |= Pattern.CASE_INSENSITIVE;
        }
        if (chMultiline.isSelected()) {
            flags |= Pattern.MULTILINE;
        }
        if (chDotall.isSelected()) {
            flags |= Pattern.DOTALL;
        }
        if (chUnicodeCase.isSelected()) {
            flags |= Pattern.UNICODE_CASE;
        }
        if (chCanonical.isSelected()) {
            flags |= Pattern.CANON_EQ;
        }
        if (chUnixLines.isSelected()) {
            flags |= Pattern.UNIX_LINES;
        }
        if (chLiteral.isSelected()) {
            flags |= Pattern.LITERAL;
        }
        if (chComments.isSelected()) {
            flags |= Pattern.COMMENTS;
        }
        if (chUnicodeClass.isSelected()) {
            flags |= Pattern.UNICODE_CHARACTER_CLASS;
        }
        return flags;
    }

    public Color getColor0() {
        return ccbCol0.getSelectedColor();
    }

    public Color getColor1() {
        return ccbCol1.getSelectedColor();
    }

    public Color getColor2() {
        return ccbCol2.getSelectedColor();
    }

    public Color getColor3() {
        return ccbCol3.getSelectedColor();
    }

    public Color getColor4() {
        return ccbCol4.getSelectedColor();
    }

    public Color getColor5() {
        return ccbCol5.getSelectedColor();
    }

    public Color getColor6() {
        return ccbCol6.getSelectedColor();
    }

    public void readProperties(Properties prefs) {
        ccbCol0.setSelectedColor(Color.decode(prefs.getProperty(PROPKEY_COLOR_0, col2str(COL_HGLGHT_LIGHT_0))));
        ccbCol1.setSelectedColor(Color.decode(prefs.getProperty(PROPKEY_COLOR_1, col2str(COL_HGLGHT_LIGHT_1))));
        ccbCol2.setSelectedColor(Color.decode(prefs.getProperty(PROPKEY_COLOR_2, col2str(COL_HGLGHT_LIGHT_2))));
        ccbCol3.setSelectedColor(Color.decode(prefs.getProperty(PROPKEY_COLOR_3, col2str(COL_HGLGHT_LIGHT_3))));
        ccbCol4.setSelectedColor(Color.decode(prefs.getProperty(PROPKEY_COLOR_4, col2str(COL_HGLGHT_LIGHT_4))));
        ccbCol5.setSelectedColor(Color.decode(prefs.getProperty(PROPKEY_COLOR_5, col2str(COL_HGLGHT_LIGHT_5))));
        ccbCol6.setSelectedColor(Color.decode(prefs.getProperty(PROPKEY_COLOR_6, col2str(COL_HGLGHT_LIGHT_6))));
    }

    public void writeProperties(Properties prefs) {
        prefs.setProperty(PROPKEY_COLOR_0, col2str(ccbCol0.getSelectedColor()));
        prefs.setProperty(PROPKEY_COLOR_1, col2str(ccbCol1.getSelectedColor()));
        prefs.setProperty(PROPKEY_COLOR_2, col2str(ccbCol2.getSelectedColor()));
        prefs.setProperty(PROPKEY_COLOR_3, col2str(ccbCol3.getSelectedColor()));
        prefs.setProperty(PROPKEY_COLOR_4, col2str(ccbCol4.getSelectedColor()));
        prefs.setProperty(PROPKEY_COLOR_5, col2str(ccbCol5.getSelectedColor()));
        prefs.setProperty(PROPKEY_COLOR_6, col2str(ccbCol6.getSelectedColor()));
    }

    private String col2str(Color color) {
        return String.valueOf(color.getRGB());
    }
}
